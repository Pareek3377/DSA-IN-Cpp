//FACTORIAL
#include<iostream>
using namespace std;
int factorial(int n){
    //base case
    if(n==0){
        return 1;
    }
    else{
       return n*factorial(n-1);
    }
}
int main(){
    int n;
    cin>>n;

    int ans= factorial(n);
    cout<<ans<<endl;
}

//2'S POWER
#include<iostream>
using namespace std;

int power(int n){
    //base case
    if(n==0)
        return 1;

    //recursive relation
    int smallerProblem=power(n-1);
    int biggerProblem=2 * smallerProblem;

    return biggerProblem;

}
int main(){
    int n;
    cin>>n;

    int ans=power(n);

    cout<<ans<<endl;
}

//PRINTING N NUMBERS MEANS IF N=5 THEN 5,4,3,2,1;

#include<iostream>
using namespace std;
void print(int n){
    if(n==0){
        return ;
    }
    cout<<n<<endl;

    print(n-1);
}
int main(){
    int n;
    cin>>n;

    print(n);
}

//FINDING POWERS OF A NUMBER USING RECURSION where both are unknown :
#include<iostream>
using namespace std;

int power(int a, int b){
    //base case
    if(b==0){
        return 1;
    }
    if(b==1){
        return a;
    }
    int ans=power(a,b/2);//recursive call

    if(b%2==0){
        //if b is even
        return ans*ans;
    }
    else{
        //if b is odd
        return a*ans*ans;
    }
}
int main(){
    int a,b;
    cin>>a>>b;

    int ans= power(a,b);

    cout<<"Answer is "<<ans <<endl;

    return 0;
}
